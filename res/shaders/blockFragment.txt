/*
  Lonely Cube, a voxel game
  Copyright (C) 2024 Bertie Cartwright

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

#ifdef GL_ES
precision highp float;
#endif

layout(location = 0) out vec4 colour;

in vec2 v_texCoord;
in float v_skyBrightness;
in float v_blockBrightness;
in float v_visibility;

uniform sampler2D u_blockTextures;
uniform sampler2D u_skyTexture;

void main() {
    vec4 skyColour = texture(u_skyTexture, gl_FragCoord.xy / vec2(textureSize(u_skyTexture, 0)));
    
    vec4 texColour = texture(u_blockTextures, v_texCoord);
    if(texColour.a <= 252.4f/255.0f) {
        discard;
    }
    vec4 texColourWithAlpha = texColour * v_skyBrightness;
    texColourWithAlpha += texColour * v_blockBrightness;
    texColourWithAlpha[3] = 1.0;
    texColourWithAlpha = mix(skyColour, texColourWithAlpha, v_visibility);
    colour = texColourWithAlpha;
};