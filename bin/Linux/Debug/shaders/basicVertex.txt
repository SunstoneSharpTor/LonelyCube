#version 450 core

layout(location = 0) in vec4 position;
layout(location = 1) in vec2 texCoord;
layout(location = 2) in float brightness;

out vec2 v_texCoord;
out float v_brightness;
out float v_visibility;

uniform mat4 u_modelView;
uniform mat4 u_proj;
uniform float u_renderDistance;

const float fogStart = 0.5f;
const float density = 1.85f;

void main() {
    vec4 positionRelativeToCam = u_modelView * position;
    gl_Position = u_proj * positionRelativeToCam;
    v_texCoord = texCoord;
    v_brightness = brightness;

    float distance = length(positionRelativeToCam.xyz);
    float normalisedDistance = clamp(distance - u_renderDistance * fogStart, 0.0f, u_renderDistance * (1.0f - fogStart)) / (u_renderDistance * (1.0f - fogStart));
    v_visibility = normalisedDistance * density;
    v_visibility = exp(-v_visibility * v_visibility);
    v_visibility *= clamp((u_renderDistance - distance) / u_renderDistance, 0.0f, 0.04f) * 25.0f;
};